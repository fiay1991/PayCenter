package com.park.paycenter.enums;

/**
 * @author liuyang
 *         时间：2015年7月27日
 *         功能：错误代码提示
 *         备注：
 *         车牌7
 *         订单8
 */

public enum ErrorCode {
	成功("成功", 2000), 传入参数错误("传入参数错误", 4000), 服务器参数错误("服务器参数错误", 5000),
	// 用户
	未找到用户("未找到用户", 5003),
	// 车牌
	此车牌号已经被绑定过("此车牌号已经被绑定过", 7001),
	// 订单
	没有找到此订单的相关信息("没有找到此订单的相关信息", 8001), 
	用户提交的支付价格与实收价格不等("用户提交的支付价格与实收价格不等", 8002), 
	此订单已经支付请勿再次支付("此订单已经支付请勿再次支付", 8003), 
	订单创建失败("订单创建失败", 8004), 
	账户余额不足("账户余额不足", 8005), 
	未查询到您的账户余额("未查询到您的账户余额", 8006), 
	关闭订单失败("关闭订单失败", 8007), 
	订单号已经存在请勿重复下单("订单号已经存在请勿重复下单",8008),
	//推送
	未到找此用户对应的token值("未到找此用户对应的token值", 9000), 
	推送失败("推送失败", 9001),
	// 刷卡支付
	微信发送的数据校验不通过("微信发送的数据校验不通过", 10001),
	刷卡支付中("刷卡支付状态未知", 10003),
	刷卡支付失败("刷卡支付失败", 10004),
	//支付宝
	支付宝预下单失败("支付宝预下单失败",110001),
	系统异常预下单状态未知("系统异常，预下单状态未知宝预下单失败",110002),
	不支持的交易状态交易返回异常("不支持的交易状态，交易返回异常",110003),
	获取支付宝订单号异常("获取支付宝订单号异常",110004),
	获取交易支付宝交易状态异常("获取交易支付宝交易状态异常",110005),
	支付结果异常("支付结果异常",110006),
	获取支付宝交易号异常("获取支付宝交易号异常",110007),
	// 产品
	没有找到相关的停车产品("没有找到相关的停车卡", 11000), 停车卡已经售罄("停车卡已经售罄", 11001), 您已经购买过了("您已经购买过了", 11002),// 检查重复购买的日期
	您订购停车卡的数量已经超过可预订数量当前剩余("您订购停车卡的数量已经超过可预订数量当前剩余", 11002),

	任务存在("任务存在",607);
	private final String content;
	private final int code;

	private ErrorCode(String content, int code) {
		// TODO Auto-generated constructor stub
		this.content = content;
		this.code = code;
	}

	public String getContent() {
		return content;
	}

	public int getCode() {
		return code;
	}

	public static String getName(int code) {
		for (ErrorCode p : ErrorCode.values()) {
			if (code == p.getCode()) {
				return p.content;
			}
		}
		return null;
	}

	public static int getCode(String name) {
		for (ErrorCode p : ErrorCode.values()) {
			if (name == p.getContent()) {
				return p.code;
			}
		}
		return 0;
	}

}
